<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
    
  
  
      <servlet>            <!-- 因為Invoker servlet的功能在Tomcat 7.x 已經被移除,所以在Tomcat 7.x已經無法以註冊名稱(http://localhost:8081/IBM/servlet/hi)的方式執行Servlet程式 -->
        <servlet-name>
            hi
        </servlet-name>
        <servlet-class>
            HelloWorld
        </servlet-class>
    </servlet>
    
                         
    <servlet-mapping>    <!-- 明確對應 http://localhost:8081/IBM/hello.html -->
        <servlet-name>
            hi
        </servlet-name>
        <url-pattern>
            /hello.html
        </url-pattern>
    </servlet-mapping>
    
    
    <servlet-mapping>    <!-- 前置路徑對應 http://localhost:8081/IBM/hello.html/xxxxx -->
        <servlet-name>
            hi
        </servlet-name>
        <url-pattern>
            /hello.html/*
        </url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>    <!-- 延伸檔名對應 http://localhost:8081/IBM/xxx/yyy/zzz.mm-->
        <servlet-name>
            hi
        </servlet-name>
        <url-pattern>
            *.mm
        </url-pattern>
    </servlet-mapping>
    
    
    <!-- HelloWorld的第二個註冊名稱與mapping -->
    <servlet>
		    <servlet-name>HelloWorld</servlet-name>
		    <servlet-class>HelloWorld</servlet-class>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>HelloWorld</servlet-name>
		    <url-pattern>/HelloWorld</url-pattern>
	  </servlet-mapping>
    
    
    <!-- Hello的註冊名稱與mapping -->
    <servlet>
		    <servlet-name>Hello</servlet-name>
		    <servlet-class>Hello</servlet-class>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>Hello</servlet-name>
		    <url-pattern>/Hello</url-pattern>
	  </servlet-mapping>
	  
	  
	  <!-- LoginHandler的註冊名稱與mapping -->
	  <servlet>
		    <servlet-name>LoginHandler</servlet-name>
		    <servlet-class>LoginHandler</servlet-class>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>LoginHandler</servlet-name>
		    <url-pattern>/LoginHandler</url-pattern>
	  </servlet-mapping>
	  

    <!-- 以下為SetContentTypeFilter的註冊 -->
    <!--【純屬測試用】-->
    <filter>
      <filter-name>SetContentTypeFilter</filter-name>
      <filter-class>filters.SetContentTypeFilter</filter-class>
      <init-param>
        <param-name>charset</param-name>
        <param-value>UTF-8</param-value>
      </init-param>
    </filter>
    <filter-mapping>	   
      <filter-name>SetContentTypeFilter</filter-name>	   
      <url-pattern>/*</url-pattern>
    </filter-mapping>
    
  
    <!-- 以下為SetCharacterEncodingFilter的註冊-->
    <!--【以後不用再撰寫 req.setCharacterEncoding("UTF-8"); 這行程式碼於程式中了】-->
    <!-- Example filter to set character encoding on each request -->
    <!-- Example filter mapping to apply the "SetCharacterEncodingFilter" filter to *all* requests processed by this web application -->
    <filter>
      <filter-name>setCharacterEncoding</filter-name>
      <filter-class>filters.SetCharacterEncodingFilter</filter-class>
      <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
      </init-param>
    </filter>
    <filter-mapping>	   
      <filter-name>setCharacterEncoding</filter-name>	   
      <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
    <!-- 以下為註冊要登入的網頁 -->
    <filter>
		  <filter-name>loginFilter</filter-name>
		  <filter-class>filters.LoginFilter</filter-class>
	  </filter>
	  <filter-mapping>
		  <filter-name>loginFilter</filter-name>
		  <url-pattern>/date_protected.jsp</url-pattern>
		  <url-pattern>/HelloWorld</url-pattern>
		  <url-pattern>/hello.html</url-pattern>
		  <url-pattern>/images/tomcat.gif</url-pattern>
	  </filter-mapping>
	
</web-app>
