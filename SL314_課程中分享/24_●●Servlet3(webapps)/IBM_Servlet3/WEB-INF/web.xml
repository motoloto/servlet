<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0"
    metadata-complete="false">
    <!-- Servlet 3.0 的部署描述檔 web.xml 的頂層標籤 有一個 metadata-complete 屬性，該屬性指定當前的部署描述檔 web.xml 是否是完全的。  -->
    <!-- 預設為false-->
    <!-- 如果設置為 true，則在部署時將只依賴 web.xml，將忽略所有的Anotation註解（同時也會跳過 web-fragment.xml 的掃瞄，亦即禁用可插性支持）-->
    <!-- 如果在web.xml、Anotation、web-fragment.xml中所設定的Servlet有同名的註冊名稱，則以web.xml中的設定為主(順序為web.xml -> Anotation -> web-fragment.xml) -->
                         
    <servlet>                           <!-- 已經無法以註冊名稱(http://localhost:8081/IBM/servlet/hi)的方式執行,因為Invoker servlet的功能在Tomcat 7.x 已經被移除 -->
        <servlet-name>hi</servlet-name>
        <servlet-class>HelloWorld</servlet-class>
    </servlet>
                         
    <servlet-mapping>                   <!-- 明確對應 http://localhost:8081/IBM/hello.html -->
        <servlet-name>hi</servlet-name>
        <url-pattern>/hello.html</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>                   <!-- 前置路徑對應 http://localhost:8081/IBM/hello.html/xxxxx -->
        <servlet-name>hi</servlet-name>
        <url-pattern>/hello.html/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>                   <!-- 延伸檔名對應 http://localhost:8081/IBM/xxx/yyy/zzz.mm-->
        <servlet-name>hi</servlet-name>
        <url-pattern>*.mm</url-pattern>
    </servlet-mapping>
    
    
    <!-- AsyncDemoServlet的第二個註冊名稱與mapping -->
    <servlet>
		    <servlet-name>AsyncDemoServlet</servlet-name>
		    <servlet-class>async1.AsyncDemoServlet</servlet-class>
		    <async-supported>true</async-supported>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>AsyncDemoServlet</servlet-name>
		    <url-pattern>/AsyncDemoServlet</url-pattern>
	  </servlet-mapping>
    
</web-app>
